{
    "namespaces": [
        {
            "name": "WinJSContrib",
            "description": "",
            "access": "",
            "virtual": false,
            "namespaces": [
                {
                    "name": "Bindings",
                    "description": "Custom WinJS Bindings",
                    "access": "",
                    "virtual": false,
                    "properties": [
                        {
                            "name": "pictureUnavailable",
                            "access": "",
                            "virtual": false,
                            "description": "path for default picture",
                            "type": ""
                        },
                        {
                            "name": "formatDate",
                            "access": "",
                            "virtual": false,
                            "description": "format date using binding argument 'formatDate'",
                            "type": ""
                        },
                        {
                            "name": "calendar",
                            "access": "",
                            "virtual": false,
                            "description": "format date using calendar function",
                            "type": ""
                        },
                        {
                            "name": "daysSinceDate",
                            "access": "",
                            "virtual": false,
                            "description": "display number of days since a date",
                            "type": ""
                        },
                        {
                            "name": "humanizeDate",
                            "access": "",
                            "virtual": false,
                            "description": "apply moment.js humanize formatting on a date. Use 'humanizeFormat' and 'addSuffix' arguments to configure binding",
                            "type": ""
                        }
                    ],
                    "functions": [
                        {
                            "name": "bindingArguments",
                            "access": "",
                            "virtual": false,
                            "description": "Helper for reading arguments for an element",
                            "parameters": [
                                {
                                    "name": "element",
                                    "type": "HTMLElement",
                                    "description": "",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "argument",
                                    "type": "string",
                                    "description": "name",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "removeHTML",
                            "access": "",
                            "virtual": false,
                            "description": "Binding function to remove HTML from data and add it to destination",
                            "parameters": [
                                {
                                    "name": "source",
                                    "type": "Object",
                                    "description": "object owning data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "sourceProperty",
                                    "type": "string[]",
                                    "description": "path to object data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "dest",
                                    "type": "HTMLElement",
                                    "description": "DOM element targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "destProperty",
                                    "type": "string[]",
                                    "description": "path to DOM element property targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "removeHTMLAndEllipsisize",
                            "access": "",
                            "virtual": false,
                            "description": "Binding function to remove HTML from data and add it to destination with an ellipse after X characters. The number of characters is specified with \"ellipsisize\" argument",
                            "parameters": [
                                {
                                    "name": "source",
                                    "type": "Object",
                                    "description": "object owning data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "sourceProperty",
                                    "type": "string[]",
                                    "description": "path to object data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "dest",
                                    "type": "HTMLElement",
                                    "description": "DOM element targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "destProperty",
                                    "type": "string[]",
                                    "description": "path to DOM element property targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "staticHTML",
                            "access": "",
                            "virtual": false,
                            "description": "Binding function to remove HTML from data and add it to destination with an ellipse after X characters. The number of characters is specified with \"ellipsisize\" argument",
                            "parameters": [
                                {
                                    "name": "source",
                                    "type": "Object",
                                    "description": "object owning data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "sourceProperty",
                                    "type": "string[]",
                                    "description": "path to object data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "dest",
                                    "type": "HTMLElement",
                                    "description": "DOM element targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "destProperty",
                                    "type": "string[]",
                                    "description": "path to DOM element property targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "dataAttr",
                            "access": "",
                            "virtual": false,
                            "description": "Binding function to add a data-* attribute to the element. Use the destination name to specifiy attribute name",
                            "parameters": [
                                {
                                    "name": "source",
                                    "type": "Object",
                                    "description": "object owning data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "sourceProperty",
                                    "type": "string[]",
                                    "description": "path to object data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "dest",
                                    "type": "HTMLElement",
                                    "description": "DOM element targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "destProperty",
                                    "type": "string[]",
                                    "description": "path to DOM element property targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [
                                "//assuming object is { myproperty: 42 }\r<div data-win-bind=\"foo : myproperty WinJSContrib.Bindings.dataAttr\"></div>\r//will result to\r<div data-foo=\"42\" data-win-bind=\"foo : myproperty WinJSContrib.Bindings.dataAttr\"></div>"
                            ]
                        },
                        {
                            "name": "addClass",
                            "access": "",
                            "virtual": false,
                            "description": "Binding function to add css class named after object property. You could format class by using a \"format\" argument",
                            "parameters": [
                                {
                                    "name": "source",
                                    "type": "Object",
                                    "description": "object owning data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "sourceProperty",
                                    "type": "string[]",
                                    "description": "path to object data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "dest",
                                    "type": "HTMLElement",
                                    "description": "DOM element targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "destProperty",
                                    "type": "string[]",
                                    "description": "path to DOM element property targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "asClass",
                            "access": "",
                            "virtual": false,
                            "description": "add css class based on a prefix defined with destProperty and the value from the source object",
                            "parameters": [
                                {
                                    "name": "source",
                                    "type": "Object",
                                    "description": "object owning data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "sourceProperty",
                                    "type": "string[]",
                                    "description": "path to object data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "dest",
                                    "type": "HTMLElement",
                                    "description": "DOM element targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "destProperty",
                                    "type": "string[]",
                                    "description": "path to DOM element property targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "toBgImage",
                            "access": "",
                            "virtual": false,
                            "description": "convert a url string for use as a background image url",
                            "parameters": [
                                {
                                    "name": "source",
                                    "type": "Object",
                                    "description": "object owning data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "sourceProperty",
                                    "type": "string[]",
                                    "description": "path to object data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "dest",
                                    "type": "HTMLElement",
                                    "description": "DOM element targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "destProperty",
                                    "type": "string[]",
                                    "description": "path to DOM element property targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "picture",
                            "access": "",
                            "virtual": false,
                            "description": "Asynchronously load a picture (using src for image tag and background-image for other elements) from url path, and add 'imageLoaded' css class once picture is ready. \rYou could rely on '.imageLoaded' to add transitions for image loading",
                            "parameters": [
                                {
                                    "name": "source",
                                    "type": "Object",
                                    "description": "object owning data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "sourceProperty",
                                    "type": "string[]",
                                    "description": "path to object data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "dest",
                                    "type": "HTMLElement",
                                    "description": "DOM element targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "destProperty",
                                    "type": "string[]",
                                    "description": "path to DOM element property targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "showIf",
                            "access": "",
                            "virtual": false,
                            "description": "show element if property is filled or true. The dest property can be used to choose what to use for showing/hiding object (opacity, visibility, or display)",
                            "parameters": [
                                {
                                    "name": "source",
                                    "type": "Object",
                                    "description": "object owning data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "sourceProperty",
                                    "type": "string[]",
                                    "description": "path to object data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "dest",
                                    "type": "HTMLElement",
                                    "description": "DOM element targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "destProperty",
                                    "type": "string[]",
                                    "description": "path to DOM element property targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "hideIfNot",
                            "access": "",
                            "virtual": false,
                            "description": "Alias for {@link WinJSContrib.Bindings.showIf}, just for semantic purpose",
                            "parameters": [
                                {
                                    "name": "source",
                                    "type": "Object",
                                    "description": "object owning data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "sourceProperty",
                                    "type": "string[]",
                                    "description": "path to object data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "dest",
                                    "type": "HTMLElement",
                                    "description": "DOM element targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "destProperty",
                                    "type": "string[]",
                                    "description": "path to DOM element property targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "hideIf",
                            "access": "",
                            "virtual": false,
                            "description": "hide element if property is filled or true. The dest property can be used to choose what to use for showing/hiding object (opacity, visibility, or display)",
                            "parameters": [
                                {
                                    "name": "source",
                                    "type": "Object",
                                    "description": "object owning data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "sourceProperty",
                                    "type": "string[]",
                                    "description": "path to object data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "dest",
                                    "type": "HTMLElement",
                                    "description": "DOM element targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "destProperty",
                                    "type": "string[]",
                                    "description": "path to DOM element property targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "showIfNot",
                            "access": "",
                            "virtual": false,
                            "description": "Alias for {@link WinJSContrib.Bindings.hideIf}, just for semantic purpose",
                            "parameters": [
                                {
                                    "name": "source",
                                    "type": "Object",
                                    "description": "object owning data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "sourceProperty",
                                    "type": "string[]",
                                    "description": "path to object data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "dest",
                                    "type": "HTMLElement",
                                    "description": "DOM element targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "destProperty",
                                    "type": "string[]",
                                    "description": "path to DOM element property targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "enableIf",
                            "access": "",
                            "virtual": false,
                            "description": "enable element if property is filled or true",
                            "parameters": [
                                {
                                    "name": "source",
                                    "type": "Object",
                                    "description": "object owning data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "sourceProperty",
                                    "type": "string[]",
                                    "description": "path to object data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "dest",
                                    "type": "HTMLElement",
                                    "description": "DOM element targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "destProperty",
                                    "type": "string[]",
                                    "description": "path to DOM element property targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "disableIf",
                            "access": "",
                            "virtual": false,
                            "description": "disable element if property is filled or true",
                            "parameters": [
                                {
                                    "name": "source",
                                    "type": "Object",
                                    "description": "object owning data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "sourceProperty",
                                    "type": "string[]",
                                    "description": "path to object data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "dest",
                                    "type": "HTMLElement",
                                    "description": "DOM element targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "destProperty",
                                    "type": "string[]",
                                    "description": "path to DOM element property targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "toWidth",
                            "access": "",
                            "virtual": false,
                            "description": "apply a percent number as width (in percent) on the element",
                            "parameters": [
                                {
                                    "name": "source",
                                    "type": "Object",
                                    "description": "object owning data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "sourceProperty",
                                    "type": "string[]",
                                    "description": "path to object data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "dest",
                                    "type": "HTMLElement",
                                    "description": "DOM element targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "destProperty",
                                    "type": "string[]",
                                    "description": "path to DOM element property targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "ellipsisize",
                            "access": "",
                            "virtual": false,
                            "description": "truncate a string and add ellipse to the text if string is longer than a limit. The max size of text is determined by a 'ellipsisize' argument",
                            "parameters": [
                                {
                                    "name": "source",
                                    "type": "Object",
                                    "description": "object owning data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "sourceProperty",
                                    "type": "string[]",
                                    "description": "path to object data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "dest",
                                    "type": "HTMLElement",
                                    "description": "DOM element targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "destProperty",
                                    "type": "string[]",
                                    "description": "path to DOM element property targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [
                                "{@lang xml}\r<p data-win-bind=\"innerText : someLongText WinJSContrib.Bindings.ellipsisize\" data-win-bind-args='{ \"ellipsisize\" : 50}'></p>"
                            ]
                        },
                        {
                            "name": "twoWayOnChange",
                            "access": "",
                            "virtual": false,
                            "description": "Two way binding triggered by \"change\" event on inputs",
                            "parameters": [
                                {
                                    "name": "source",
                                    "type": "Object",
                                    "description": "object owning data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "sourceProperty",
                                    "type": "string[]",
                                    "description": "path to object data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "dest",
                                    "type": "HTMLElement",
                                    "description": "DOM element targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "destProperty",
                                    "type": "string[]",
                                    "description": "path to DOM element property targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        }
                    ]
                },
                {
                    "name": "UI",
                    "description": "",
                    "access": "",
                    "virtual": false,
                    "functions": [
                        {
                            "name": "offsetFrom",
                            "access": "",
                            "virtual": false,
                            "description": "Calculate offset of element relative to parent element. If parent parameter is null, offset is relative to document",
                            "parameters": [
                                {
                                    "name": "element",
                                    "type": "HTMLElement",
                                    "description": "element to evaluate",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "parent",
                                    "type": "HTMLElement",
                                    "description": "reference of offset",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "appbarsOpen",
                            "access": "",
                            "virtual": false,
                            "description": "open appbars",
                            "parameters": [],
                            "examples": []
                        },
                        {
                            "name": "appbarsClose",
                            "access": "",
                            "virtual": false,
                            "description": "close appbars",
                            "parameters": [],
                            "examples": []
                        },
                        {
                            "name": "appbarsDisable",
                            "access": "",
                            "virtual": false,
                            "description": "disable appbars",
                            "parameters": [],
                            "examples": []
                        },
                        {
                            "name": "appbarsEnable",
                            "access": "",
                            "virtual": false,
                            "description": "enable appbars",
                            "parameters": [],
                            "examples": []
                        },
                        {
                            "name": "elementLoaded",
                            "access": "",
                            "virtual": false,
                            "description": "build a promise around element \"load\" event (work for all element with src property like images, iframes, ...)",
                            "parameters": [
                                {
                                    "name": "element",
                                    "type": "HTMLElement",
                                    "description": "",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "url",
                                    "type": "string",
                                    "description": "url used to feed \"src\" on element",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "WinJS.Promise",
                                "description": ""
                            }
                        },
                        {
                            "name": "loadImage",
                            "access": "",
                            "virtual": false,
                            "description": "Create a promise for getting an image object from url",
                            "parameters": [
                                {
                                    "name": "imgUrl",
                                    "type": "string",
                                    "description": "url for the picture",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "WinJS.Promise",
                                "description": ""
                            }
                        },
                        {
                            "name": "listElementsAfterMe",
                            "access": "",
                            "virtual": false,
                            "description": "List all elements found after provided element",
                            "parameters": [
                                {
                                    "name": "elt",
                                    "type": "HTMLElement",
                                    "description": "target element",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "Array",
                                "description": "list of sibling elements"
                            }
                        },
                        {
                            "name": "removeElementAnimation",
                            "access": "",
                            "virtual": false,
                            "description": "create an animation for removing an element from a list",
                            "parameters": [
                                {
                                    "name": "element",
                                    "type": "HTMLElement",
                                    "description": "that will be removed",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "WinJS.Promise",
                                "description": ""
                            }
                        },
                        {
                            "name": "bindPageActions",
                            "access": "",
                            "virtual": false,
                            "description": "setup declarative binding to parent control function",
                            "parameters": [
                                {
                                    "name": "element",
                                    "type": "HTMLElement",
                                    "description": "root node crawled for page actions",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "control",
                                    "type": "Object",
                                    "description": "control owning functions to call",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "bindPageLinks",
                            "access": "",
                            "virtual": false,
                            "description": "setup declarative binding to page link",
                            "parameters": [
                                {
                                    "name": "element",
                                    "type": "HTMLElement",
                                    "description": "root node crawled for page actions",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "bindMembers",
                            "access": "",
                            "virtual": false,
                            "description": "bind an element to a property of the supplyed control",
                            "parameters": [
                                {
                                    "name": "element",
                                    "type": "HTMLElement",
                                    "description": "root node crawled for page actions",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "control",
                                    "type": "Object",
                                    "description": "control owning functions to call",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "bindActions",
                            "access": "",
                            "virtual": false,
                            "description": "setup declarative binding to parent control function and to navigation links",
                            "parameters": [
                                {
                                    "name": "element",
                                    "type": "HTMLElement",
                                    "description": "root node crawled for page actions",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "control",
                                    "type": "Object",
                                    "description": "control owning functions to call",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "renderFragment",
                            "access": "",
                            "virtual": false,
                            "description": "render a html fragment with winjs contrib pipeline and properties",
                            "parameters": [
                                {
                                    "name": "container",
                                    "type": "HTMLElement",
                                    "description": "element that will contain the fragment",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "location",
                                    "type": "string",
                                    "description": "url for the fragment",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "args",
                                    "type": "Object",
                                    "description": "arguments to the fragment",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "options",
                                    "type": "Object",
                                    "description": "rendering options",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "DataFormBinding",
                            "access": "",
                            "virtual": false,
                            "description": "bi-directional binding for working with input fields and custom input controls. This binding expect a {@link WinJSContrib.UI.DataForm} to be found on the parent form",
                            "parameters": [
                                {
                                    "name": "source",
                                    "type": "Object",
                                    "description": "object owning data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "sourceProperty",
                                    "type": "string[]",
                                    "description": "path to object data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "dest",
                                    "type": "HTMLElement",
                                    "description": "DOM element targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "destProperty",
                                    "type": "string[]",
                                    "description": "path to DOM element property targeted by binding",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        }
                    ],
                    "classes": [
                        {
                            "name": "EventTracker",
                            "description": "object to register and release events from addEventListener or bind",
                            "extends": [],
                            "access": "",
                            "virtual": false,
                            "fires": "",
                            "constructor": {
                                "name": "EventTracker",
                                "description": "",
                                "parameters": [],
                                "examples": []
                            },
                            "functions": [
                                {
                                    "name": "addEvent",
                                    "access": "",
                                    "virtual": false,
                                    "description": "register an event from an object",
                                    "parameters": [
                                        {
                                            "name": "e",
                                            "type": "Object",
                                            "description": "object containing addEventListener",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "eventName",
                                            "type": "string",
                                            "description": "name of the event",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "handler",
                                            "type": "function",
                                            "description": "",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "capture",
                                            "type": "boolean",
                                            "description": "",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": [],
                                    "returns": {
                                        "type": "function",
                                        "description": "function to call for unregistering the event"
                                    }
                                },
                                {
                                    "name": "addBinding",
                                    "access": "",
                                    "virtual": false,
                                    "description": "register binding event",
                                    "parameters": [
                                        {
                                            "name": "e",
                                            "type": "Object",
                                            "description": "object containing bind method",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "eventName",
                                            "type": "string",
                                            "description": "name of the binding event",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "handler",
                                            "type": "function",
                                            "description": "",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "dispose",
                                    "access": "",
                                    "virtual": false,
                                    "description": "release all registered events",
                                    "parameters": [],
                                    "examples": []
                                }
                            ]
                        },
                        {
                            "name": "MediaTrigger",
                            "description": "Trigger events on media queries. This class is usefull as a component for other controls to change some properties based on media queries",
                            "extends": [],
                            "access": "",
                            "virtual": false,
                            "fires": "",
                            "constructor": {
                                "name": "MediaTrigger",
                                "description": "Trigger events on media queries. This class is usefull as a component for other controls to change some properties based on media queries",
                                "parameters": [
                                    {
                                        "name": "items",
                                        "type": "Object",
                                        "description": "object containing one property for each query",
                                        "default": "",
                                        "optional": "",
                                        "nullable": ""
                                    }
                                ],
                                "examples": []
                            }
                        },
                        {
                            "name": "ChildViewFlyout",
                            "description": "This control wrap a navigator into a flyout that appears typically as a side panel. \rIt's intended to provide a secondary navigation mecanism or to enable scenarios like master detail, or content selection",
                            "extends": [],
                            "access": "",
                            "virtual": false,
                            "fires": "",
                            "constructor": {
                                "name": "ChildViewFlyout",
                                "description": "",
                                "parameters": [
                                    {
                                        "name": "element",
                                        "type": "HTMLElement",
                                        "description": "DOM element containing the control",
                                        "default": "",
                                        "optional": "",
                                        "nullable": ""
                                    },
                                    {
                                        "name": "options",
                                        "type": "Object",
                                        "description": "",
                                        "default": "",
                                        "optional": "",
                                        "nullable": ""
                                    }
                                ],
                                "examples": []
                            },
                            "properties": [
                                {
                                    "name": "pageControl",
                                    "access": "",
                                    "virtual": false,
                                    "description": "",
                                    "type": {
                                        "names": [
                                            "HTMLElement"
                                        ]
                                    }
                                }
                            ],
                            "functions": [
                                {
                                    "name": "navigate",
                                    "access": "",
                                    "virtual": false,
                                    "description": "navigate to target uri",
                                    "parameters": [
                                        {
                                            "name": "uri",
                                            "type": "string",
                                            "description": "target page uri",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options",
                                            "type": "Object",
                                            "description": "options for target page",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "skipHistory",
                                            "type": "boolean",
                                            "description": "indicate if navigation should skip being added to history",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": [],
                                    "returns": {
                                        "type": "WinJS.Promise",
                                        "description": ""
                                    }
                                },
                                {
                                    "name": "clear",
                                    "access": "",
                                    "virtual": false,
                                    "description": "clear all child view pages",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "closePage",
                                    "access": "",
                                    "virtual": false,
                                    "description": "close current page",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "back",
                                    "access": "",
                                    "virtual": false,
                                    "description": "navigate back",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "canGoBack",
                                    "access": "",
                                    "virtual": false,
                                    "description": "indicate if control can navigate back",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "open",
                                    "access": "",
                                    "virtual": false,
                                    "description": "display child view and navigate to target uri",
                                    "parameters": [
                                        {
                                            "name": "uri",
                                            "type": "string",
                                            "description": "target page uri",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options",
                                            "type": "Object",
                                            "description": "options for target page",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "skipHistory",
                                            "type": "boolean",
                                            "description": "indicate if navigation should skip being added to history",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": [],
                                    "returns": {
                                        "type": "WinJS.Promise",
                                        "description": ""
                                    }
                                },
                                {
                                    "name": "hide",
                                    "access": "",
                                    "virtual": false,
                                    "description": "close all content and hide child view",
                                    "parameters": [],
                                    "examples": []
                                }
                            ]
                        },
                        {
                            "name": "DataForm",
                            "description": "This control enhance data form management by adding validation mecanism and form state helpers. It must be placed on a form element",
                            "extends": [],
                            "access": "",
                            "virtual": false,
                            "fires": "",
                            "constructor": {
                                "name": "DataForm",
                                "description": "",
                                "parameters": [
                                    {
                                        "name": "element",
                                        "type": "HTMLElement",
                                        "description": "DOM element containing the control",
                                        "default": "",
                                        "optional": "",
                                        "nullable": ""
                                    },
                                    {
                                        "name": "options",
                                        "type": "Object",
                                        "description": "",
                                        "default": "",
                                        "optional": "",
                                        "nullable": ""
                                    }
                                ],
                                "examples": []
                            },
                            "properties": [
                                {
                                    "name": "state",
                                    "access": "",
                                    "virtual": false,
                                    "description": "",
                                    "type": {
                                        "names": [
                                            "Object"
                                        ]
                                    }
                                },
                                {
                                    "name": "messages",
                                    "access": "",
                                    "virtual": false,
                                    "description": "",
                                    "type": ""
                                },
                                {
                                    "name": "rules",
                                    "access": "",
                                    "virtual": false,
                                    "description": "",
                                    "type": ""
                                },
                                {
                                    "name": "groups",
                                    "access": "",
                                    "virtual": false,
                                    "description": "",
                                    "type": ""
                                },
                                {
                                    "name": "item",
                                    "access": "",
                                    "virtual": false,
                                    "description": "object bound to data form",
                                    "type": ""
                                },
                                {
                                    "name": "updated",
                                    "access": "",
                                    "virtual": false,
                                    "description": "indicate if form has updates",
                                    "type": {
                                        "names": [
                                            "boolean"
                                        ]
                                    }
                                }
                            ],
                            "functions": [
                                {
                                    "name": "checkState",
                                    "access": "",
                                    "virtual": false,
                                    "description": "check form state",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "cancel",
                                    "access": "",
                                    "virtual": false,
                                    "description": "cancel updates on form item",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "save",
                                    "access": "",
                                    "virtual": false,
                                    "description": "apply changes to source object (relevant only if using workOnCopy)",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "validate",
                                    "access": "",
                                    "virtual": false,
                                    "description": "validate form",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "dispose",
                                    "access": "",
                                    "virtual": false,
                                    "description": "release form",
                                    "parameters": [],
                                    "examples": []
                                }
                            ],
                            "namespaces": [
                                {
                                    "name": "Converters",
                                    "description": "",
                                    "access": "",
                                    "virtual": false,
                                    "properties": [
                                        {
                                            "name": "none",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "type": ""
                                        },
                                        {
                                            "name": "text",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "type": ""
                                        },
                                        {
                                            "name": "number",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "type": ""
                                        },
                                        {
                                            "name": "boolean",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "type": ""
                                        },
                                        {
                                            "name": "object",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "type": ""
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "SemanticListViews",
                            "description": "Control wrapping semantic zoom and listviews with a {@link WinJSContrib.UI.DataSources.DataSourceManager}",
                            "extends": [],
                            "access": "",
                            "virtual": false,
                            "fires": "",
                            "constructor": {
                                "name": "SemanticListViews",
                                "description": "",
                                "parameters": [
                                    {
                                        "name": "element",
                                        "type": "HTMLElement",
                                        "description": "DOM element containing the control",
                                        "default": "",
                                        "optional": "",
                                        "nullable": ""
                                    },
                                    {
                                        "name": "options",
                                        "type": "Object",
                                        "description": "",
                                        "default": "",
                                        "optional": "",
                                        "nullable": ""
                                    }
                                ],
                                "examples": [
                                    "{@lang xml}\r<div id=\"semanticzoom\" data-win-control=\"WinJSContrib.UI.SemanticListViews\" data-win-options=\"{\r    listview: { itemTemplate: select('#listItemTemplate'), groupHeaderTemplate : select('#groupItemTemplate')},\r    zoomedOutListview: { itemTemplate: select('#semanticItemTemplate')},\r    data: {\r        defaultGroupLimit: 12,\r        groupKind: WinJSContrib.UI.DataSources.Grouping.byField,\r        field: 'metadata.genre',\r        items: moviesSample\r    }}\">\r</div>"
                                ]
                            },
                            "properties": [
                                {
                                    "name": "semanticZoom",
                                    "access": "",
                                    "virtual": false,
                                    "description": "",
                                    "type": ""
                                },
                                {
                                    "name": "listview",
                                    "access": "",
                                    "virtual": false,
                                    "description": "",
                                    "type": ""
                                },
                                {
                                    "name": "zoomedOutListview",
                                    "access": "",
                                    "virtual": false,
                                    "description": "",
                                    "type": ""
                                },
                                {
                                    "name": "dataManager",
                                    "access": "",
                                    "virtual": false,
                                    "description": "",
                                    "type": ""
                                }
                            ]
                        },
                        {
                            "name": "ExtendedSplash",
                            "description": "This control displays a custom splash screen. It is primarily focused on WinRT apps but it works quite well in cordova applications (in that case you must add WinJSContrib.ui.crossplatform.js)",
                            "extends": [],
                            "access": "",
                            "virtual": false,
                            "fires": "",
                            "constructor": {
                                "name": "ExtendedSplash",
                                "description": "",
                                "parameters": [
                                    {
                                        "name": "element",
                                        "type": "HTMLElement",
                                        "description": "DOM element containing the control",
                                        "default": "",
                                        "optional": "",
                                        "nullable": ""
                                    },
                                    {
                                        "name": "options",
                                        "type": "Object",
                                        "description": "",
                                        "default": "",
                                        "optional": "",
                                        "nullable": ""
                                    }
                                ],
                                "examples": [
                                    "<div data-win-control=\"WinJSContrib.UI.ExtendedSplash\" data-win-options=\"{ text: 'extended splash screen control in action...' }\"></div>"
                                ]
                            },
                            "functions": [
                                {
                                    "name": "defaultSplashContent",
                                    "access": "",
                                    "virtual": false,
                                    "description": "build html content for splash screen",
                                    "parameters": [
                                        {
                                            "name": "text",
                                            "type": "string",
                                            "description": "text displayed on splash",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": [],
                                    "returns": {
                                        "type": "string",
                                        "description": "HTML content"
                                    }
                                },
                                {
                                    "name": "show",
                                    "access": "",
                                    "virtual": false,
                                    "description": "show splash screen during the execution of a promise. After the promise, splash screen will NOT auto-hide",
                                    "parameters": [
                                        {
                                            "name": "dataLoadPromise",
                                            "type": "WinJS.Promise",
                                            "description": "promise covered by splash screen",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "arg",
                                            "type": "Object",
                                            "description": "application init arguments",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": [],
                                    "returns": {
                                        "type": "WinJS.Promise",
                                        "description": "completion promise"
                                    }
                                },
                                {
                                    "name": "hide",
                                    "access": "",
                                    "virtual": false,
                                    "description": "hide splash screen",
                                    "parameters": [],
                                    "examples": [],
                                    "returns": {
                                        "type": "WinJS.Promise",
                                        "description": "splash screen removal promise"
                                    }
                                }
                            ]
                        },
                        {
                            "name": "FlipViewPager",
                            "description": "Flipview companion to display pages markers (like carousels)",
                            "extends": [],
                            "access": "",
                            "virtual": false,
                            "fires": "",
                            "constructor": {
                                "name": "FlipViewPager",
                                "description": "",
                                "parameters": [
                                    {
                                        "name": "element",
                                        "type": "HTMLElement",
                                        "description": "DOM element containing the control",
                                        "default": "",
                                        "optional": "",
                                        "nullable": ""
                                    },
                                    {
                                        "name": "options",
                                        "type": "Object",
                                        "description": "",
                                        "default": "",
                                        "optional": "",
                                        "nullable": ""
                                    }
                                ],
                                "examples": []
                            },
                            "properties": [
                                {
                                    "name": "flipView",
                                    "access": "",
                                    "virtual": false,
                                    "description": "attached flipview",
                                    "type": ""
                                }
                            ]
                        },
                        {
                            "name": "FlyoutPage",
                            "description": "display html content or target html fragment as a sidebar flyout page",
                            "extends": [],
                            "access": "",
                            "virtual": false,
                            "fires": "",
                            "constructor": {
                                "name": "FlyoutPage",
                                "description": "",
                                "parameters": [
                                    {
                                        "name": "element",
                                        "type": "HTMLElement",
                                        "description": "DOM element containing the control",
                                        "default": "",
                                        "optional": "",
                                        "nullable": ""
                                    },
                                    {
                                        "name": "options",
                                        "type": "Object",
                                        "description": "",
                                        "default": "",
                                        "optional": "",
                                        "nullable": ""
                                    }
                                ],
                                "examples": []
                            },
                            "properties": [
                                {
                                    "name": "content",
                                    "access": "",
                                    "virtual": false,
                                    "description": "",
                                    "type": {
                                        "names": [
                                            "HTMLElement"
                                        ]
                                    }
                                },
                                {
                                    "name": "display",
                                    "access": "",
                                    "virtual": false,
                                    "description": "",
                                    "type": {
                                        "names": [
                                            "HTMLElement"
                                        ]
                                    }
                                },
                                {
                                    "name": "placement",
                                    "access": "",
                                    "virtual": false,
                                    "description": "left | right | top | bottom",
                                    "type": {
                                        "names": [
                                            "string"
                                        ]
                                    }
                                }
                            ]
                        },
                        {
                            "name": "GlobalProgress",
                            "description": "Control for displaying a global progress indicator. The global progress takes care of keeping count of show and hide calls, and it will hide it only when matching",
                            "extends": [],
                            "access": "",
                            "virtual": false,
                            "fires": "",
                            "constructor": {
                                "name": "GlobalProgress",
                                "description": "",
                                "parameters": [
                                    {
                                        "name": "element",
                                        "type": "HTMLElement",
                                        "description": "DOM element containing the control",
                                        "default": "",
                                        "optional": "",
                                        "nullable": ""
                                    },
                                    {
                                        "name": "options",
                                        "type": "Object",
                                        "description": "",
                                        "default": "",
                                        "optional": "",
                                        "nullable": ""
                                    }
                                ],
                                "examples": []
                            },
                            "properties": [
                                {
                                    "name": "throttlingDelay",
                                    "access": "",
                                    "virtual": false,
                                    "description": "",
                                    "type": {
                                        "names": [
                                            "number"
                                        ]
                                    }
                                }
                            ],
                            "functions": [
                                {
                                    "name": "show",
                                    "access": "",
                                    "virtual": false,
                                    "description": "show progress after the throttling delay",
                                    "parameters": [
                                        {
                                            "name": "timeout",
                                            "type": "number",
                                            "description": "custom throttling delay",
                                            "default": "",
                                            "optional": true,
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "showNow",
                                    "access": "",
                                    "virtual": false,
                                    "description": "show progress immediately",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "hide",
                                    "access": "",
                                    "virtual": false,
                                    "description": "hide progress indicator",
                                    "parameters": [
                                        {
                                            "name": "force",
                                            "type": "boolean",
                                            "description": "force hiding progress indicator and reset calls count",
                                            "default": "",
                                            "optional": true,
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                }
                            ]
                        },
                        {
                            "name": "GridControl",
                            "description": "Control that layout it's children with different algorythms. Used with {@link WinJSContrib.UI.Hub}, The Grid could rely on multipass rendering to optimize large hub pages load.",
                            "extends": [],
                            "access": "",
                            "virtual": false,
                            "fires": "",
                            "constructor": {
                                "name": "GridControl",
                                "description": "",
                                "parameters": [
                                    {
                                        "name": "element",
                                        "type": "HTMLElement",
                                        "description": "DOM element containing the control",
                                        "default": "",
                                        "optional": "",
                                        "nullable": ""
                                    },
                                    {
                                        "name": "options",
                                        "type": "Object",
                                        "description": "",
                                        "default": "",
                                        "optional": "",
                                        "nullable": ""
                                    }
                                ],
                                "examples": []
                            },
                            "functions": [
                                {
                                    "name": "prepareItems",
                                    "access": "",
                                    "virtual": false,
                                    "description": "render HTML for items",
                                    "parameters": [
                                        {
                                            "name": "items",
                                            "type": "Array",
                                            "description": "array of items to render",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "renderOptions",
                                            "type": "Object",
                                            "description": "",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "renderItemsContent",
                                    "access": "",
                                    "virtual": false,
                                    "description": "force items content to render",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "clear",
                                    "access": "",
                                    "virtual": false,
                                    "description": "Clear all layout and position styles on items",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "layout",
                                    "access": "",
                                    "virtual": false,
                                    "description": "layout content items",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "updateLayout",
                                    "access": "",
                                    "virtual": false,
                                    "description": "update grid layout",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "getLayout",
                                    "access": "",
                                    "virtual": false,
                                    "description": "get layout applicable to the current context",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "dispose",
                                    "access": "",
                                    "virtual": false,
                                    "description": "Release grid resources",
                                    "parameters": [],
                                    "examples": []
                                }
                            ]
                        },
                        {
                            "name": "HubControl",
                            "description": "Hub control replacement intended to be used with {@link WinJSContrib.UI.GridControl}",
                            "extends": [],
                            "access": "",
                            "virtual": false,
                            "fires": "",
                            "constructor": {
                                "name": "HubControl",
                                "description": "Hub control replacement intended to be used with {@link WinJSContrib.UI.GridControl}",
                                "parameters": [
                                    {
                                        "name": "element",
                                        "type": "HTMLElement",
                                        "description": "DOM element containing the control",
                                        "default": "",
                                        "optional": "",
                                        "nullable": ""
                                    },
                                    {
                                        "name": "options",
                                        "type": "Object",
                                        "description": "",
                                        "default": "",
                                        "optional": "",
                                        "nullable": ""
                                    }
                                ],
                                "examples": []
                            },
                            "properties": [
                                {
                                    "name": "multipass",
                                    "access": "",
                                    "virtual": false,
                                    "description": "configure multipass rendering (for using in conjunction with {@link WinJSContrib.UI.GridControl}",
                                    "type": ""
                                }
                            ]
                        },
                        {
                            "name": "MultiPassRenderer",
                            "description": "This control manage multi-pass rendering for improving performances when showing a list of items.\rThe renderer will render \"shells\" for the items to enable page layout, and render items content on demand, or when items scrolls to view.",
                            "extends": [],
                            "access": "",
                            "virtual": false,
                            "fires": "",
                            "constructor": {
                                "name": "MultiPassRenderer",
                                "description": "This control manage multi-pass rendering for improving performances when showing a list of items.\rThe renderer will render \"shells\" for the items to enable page layout, and render items content on demand, or when items scrolls to view.",
                                "parameters": [],
                                "examples": []
                            },
                            "properties": [
                                {
                                    "name": "multipass",
                                    "access": "",
                                    "virtual": false,
                                    "description": "kind of multipass, can be 'section', or 'item'",
                                    "type": {
                                        "names": [
                                            "String"
                                        ]
                                    }
                                },
                                {
                                    "name": "tolerance",
                                    "access": "",
                                    "virtual": false,
                                    "description": "tolerance for determining if the rendering should apply. Tolerance is expressed in scroll container proportion. For example, 1 means that tolerance is equal to scroll container size",
                                    "type": {
                                        "names": [
                                            "number"
                                        ]
                                    }
                                },
                                {
                                    "name": "virtualize",
                                    "access": "",
                                    "virtual": false,
                                    "description": "indicate if renderer empty items out of sight",
                                    "type": {
                                        "names": [
                                            "boolean"
                                        ]
                                    }
                                },
                                {
                                    "name": "orientation",
                                    "access": "",
                                    "virtual": false,
                                    "description": "could be 'vertical' or 'horizontal'",
                                    "type": {
                                        "names": [
                                            "String"
                                        ]
                                    }
                                },
                                {
                                    "name": "scrollContainer",
                                    "access": "",
                                    "virtual": false,
                                    "description": "Element containing scroll. If scrollContainer is filled, items content will get rendered when coming into view",
                                    "type": {
                                        "names": [
                                            "HTMLElement"
                                        ]
                                    }
                                }
                            ],
                            "functions": [
                                {
                                    "name": "refreshScrollEvents",
                                    "access": "",
                                    "virtual": false,
                                    "description": "refresh scroll events associated to multi pass renderer",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "clearOffsets",
                                    "access": "",
                                    "virtual": false,
                                    "description": "Clear cached offsets for bloc and for items",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "updateLayout",
                                    "access": "",
                                    "virtual": false,
                                    "description": "update ui related properties like cached offsets, scroll events, ...",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "prepareItems",
                                    "access": "",
                                    "virtual": false,
                                    "description": "render items shells to the page",
                                    "parameters": [
                                        {
                                            "name": "items",
                                            "type": "Array",
                                            "description": "array of items to render",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "renderOptions",
                                            "type": "Object",
                                            "description": "options for rendering items, can override control options like item template",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "checkRendering",
                                    "access": "",
                                    "virtual": false,
                                    "description": "check rendering of items, based on multipass configuration (force items on screen to render)",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "renderItemsContent",
                                    "access": "",
                                    "virtual": false,
                                    "description": "force rendering of all unrendered items",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "dispose",
                                    "access": "",
                                    "virtual": false,
                                    "description": "release resources for multipass renderer",
                                    "parameters": [],
                                    "examples": []
                                }
                            ]
                        },
                        {
                            "name": "MultiPassItem",
                            "description": "Item for multipass rendering",
                            "extends": [],
                            "access": "",
                            "virtual": false,
                            "fires": "",
                            "constructor": {
                                "name": "MultiPassItem",
                                "description": "Item for multipass rendering",
                                "parameters": [],
                                "examples": []
                            },
                            "functions": [
                                {
                                    "name": "render",
                                    "access": "",
                                    "virtual": false,
                                    "description": "render item content",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "empty",
                                    "access": "",
                                    "virtual": false,
                                    "description": "empty item and mark it as unrendered",
                                    "parameters": [],
                                    "examples": []
                                }
                            ]
                        },
                        {
                            "name": "PageControlNavigator",
                            "description": "",
                            "extends": [],
                            "access": "",
                            "virtual": false,
                            "fires": "",
                            "constructor": {
                                "name": "PageControlNavigator",
                                "description": "",
                                "parameters": [
                                    {
                                        "name": "element",
                                        "type": "HTMLElement",
                                        "description": "DOM element containing the control",
                                        "default": "",
                                        "optional": "",
                                        "nullable": ""
                                    },
                                    {
                                        "name": "options",
                                        "type": "Object",
                                        "description": "",
                                        "default": "",
                                        "optional": "",
                                        "nullable": ""
                                    }
                                ],
                                "examples": []
                            }
                        }
                    ],
                    "namespaces": [
                        {
                            "name": "Animation",
                            "description": "",
                            "access": "",
                            "virtual": false,
                            "namespaces": [
                                {
                                    "name": "Easings",
                                    "description": "",
                                    "access": "",
                                    "virtual": false,
                                    "properties": [
                                        {
                                            "name": "easeInQuad",
                                            "access": "",
                                            "virtual": false,
                                            "description": "Quad ease in",
                                            "type": ""
                                        },
                                        {
                                            "name": "easeInCubic",
                                            "access": "",
                                            "virtual": false,
                                            "description": "Cubic ease in",
                                            "type": ""
                                        }
                                    ]
                                }
                            ],
                            "functions": [
                                {
                                    "name": "fadeOut",
                                    "access": "",
                                    "virtual": false,
                                    "description": "configurable fade out",
                                    "parameters": [
                                        {
                                            "name": "hidden",
                                            "type": "Object",
                                            "description": "element or array of elements",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "duration",
                                            "type": "number",
                                            "description": "fading duration",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options",
                                            "type": "Object",
                                            "description": "options like delay, easing",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "fadeIn",
                                    "access": "",
                                    "virtual": false,
                                    "description": "configurable fade in",
                                    "parameters": [
                                        {
                                            "name": "hidden",
                                            "type": "Object",
                                            "description": "element or array of elements",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "duration",
                                            "type": "number",
                                            "description": "fading duration",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options",
                                            "type": "Object",
                                            "description": "options like delay, easing",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "pageExit",
                                    "access": "",
                                    "virtual": false,
                                    "description": "configurable page exit effect",
                                    "parameters": [
                                        {
                                            "name": "hidden",
                                            "type": "Object",
                                            "description": "element or array of elements",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "duration",
                                            "type": "number",
                                            "description": "transition duration",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options",
                                            "type": "Object",
                                            "description": "options like delay, easing",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "enterPage",
                                    "access": "",
                                    "virtual": false,
                                    "description": "configurable page enter effect",
                                    "parameters": [
                                        {
                                            "name": "elements",
                                            "type": "Object",
                                            "description": "element or array of elements",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "duration",
                                            "type": "number",
                                            "description": "transition duration",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options",
                                            "type": "Object",
                                            "description": "options like delay, easing",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "slideFromBottom",
                                    "access": "",
                                    "virtual": false,
                                    "description": "configurable slide effect",
                                    "parameters": [
                                        {
                                            "name": "elements",
                                            "type": "Object",
                                            "description": "element or array of elements",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options",
                                            "type": "Object",
                                            "description": "options like duration, delay, easing",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "slideFromTop",
                                    "access": "",
                                    "virtual": false,
                                    "description": "configurable slide effect",
                                    "parameters": [
                                        {
                                            "name": "elements",
                                            "type": "Object",
                                            "description": "element or array of elements",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options",
                                            "type": "Object",
                                            "description": "options like duration, delay, easing",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "slideFromLeft",
                                    "access": "",
                                    "virtual": false,
                                    "description": "configurable slide effect",
                                    "parameters": [
                                        {
                                            "name": "elements",
                                            "type": "Object",
                                            "description": "element or array of elements",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options",
                                            "type": "Object",
                                            "description": "options like duration, delay, easing",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "slideFromRight",
                                    "access": "",
                                    "virtual": false,
                                    "description": "configurable slide effect",
                                    "parameters": [
                                        {
                                            "name": "elements",
                                            "type": "Object",
                                            "description": "element or array of elements",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options",
                                            "type": "Object",
                                            "description": "options like duration, delay, easing",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "slideToBottom",
                                    "access": "",
                                    "virtual": false,
                                    "description": "configurable slide effect",
                                    "parameters": [
                                        {
                                            "name": "elements",
                                            "type": "Object",
                                            "description": "element or array of elements",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options",
                                            "type": "Object",
                                            "description": "options like duration, delay, easing",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "slideToTop",
                                    "access": "",
                                    "virtual": false,
                                    "description": "configurable slide effect",
                                    "parameters": [
                                        {
                                            "name": "elements",
                                            "type": "Object",
                                            "description": "element or array of elements",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options",
                                            "type": "Object",
                                            "description": "options like duration, delay, easing",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "slideToLeft",
                                    "access": "",
                                    "virtual": false,
                                    "description": "configurable slide effect",
                                    "parameters": [
                                        {
                                            "name": "elements",
                                            "type": "Object",
                                            "description": "element or array of elements",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options",
                                            "type": "Object",
                                            "description": "options like duration, delay, easing",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "slideToRight",
                                    "access": "",
                                    "virtual": false,
                                    "description": "configurable slide effect",
                                    "parameters": [
                                        {
                                            "name": "elements",
                                            "type": "Object",
                                            "description": "element or array of elements",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options",
                                            "type": "Object",
                                            "description": "options like duration, delay, easing",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "tabExitPage",
                                    "access": "",
                                    "virtual": false,
                                    "description": "animation for tab exit",
                                    "parameters": [
                                        {
                                            "name": "elements",
                                            "type": "Object",
                                            "description": "element or array of elements",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options",
                                            "type": "Object",
                                            "description": "options like duration, delay, easing",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "tabEnterPage",
                                    "access": "",
                                    "virtual": false,
                                    "description": "animation for tab exit",
                                    "parameters": [
                                        {
                                            "name": "elements",
                                            "type": "Object",
                                            "description": "element or array of elements",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options",
                                            "type": "Object",
                                            "description": "options like duration, delay, easing",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "exitGrow",
                                    "access": "",
                                    "virtual": false,
                                    "description": "exit and grow animation",
                                    "parameters": [
                                        {
                                            "name": "elements",
                                            "type": "Object",
                                            "description": "element or array of elements",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "duration",
                                            "type": "number",
                                            "description": "transition duration",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options",
                                            "type": "Object",
                                            "description": "options like delay, easing",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "exitShrink",
                                    "access": "",
                                    "virtual": false,
                                    "description": "exit and shrink animation",
                                    "parameters": [
                                        {
                                            "name": "elements",
                                            "type": "Object",
                                            "description": "element or array of elements",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "duration",
                                            "type": "number",
                                            "description": "transition duration",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options",
                                            "type": "Object",
                                            "description": "options like delay, easing",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "enterShrink",
                                    "access": "",
                                    "virtual": false,
                                    "description": "enter and shrink animation",
                                    "parameters": [
                                        {
                                            "name": "elements",
                                            "type": "Object",
                                            "description": "element or array of elements",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "duration",
                                            "type": "number",
                                            "description": "transition duration",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options",
                                            "type": "Object",
                                            "description": "options like delay, easing",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "enterGrow",
                                    "access": "",
                                    "virtual": false,
                                    "description": "enter and shrink animation",
                                    "parameters": [
                                        {
                                            "name": "elements",
                                            "type": "Object",
                                            "description": "element or array of elements",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "duration",
                                            "type": "number",
                                            "description": "transition duration",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options",
                                            "type": "Object",
                                            "description": "options like delay, easing",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                }
                            ],
                            "properties": [
                                {
                                    "name": "shrinkAndFall",
                                    "access": "",
                                    "virtual": false,
                                    "description": "shrink and fall animation",
                                    "type": ""
                                }
                            ]
                        },
                        {
                            "name": "DataSources",
                            "description": "",
                            "access": "",
                            "virtual": false,
                            "classes": [
                                {
                                    "name": "DataSourceManager",
                                    "description": "helper class to manage an array with filter and grouping facilities and plug it into listview with or without semantic zoom. \rThis is a low level helper object, it's likely that relying on {@link WinJSContrib.UI.DataSources.SemanticListViews} will be easier.",
                                    "extends": [],
                                    "access": "",
                                    "virtual": false,
                                    "fires": "",
                                    "constructor": {
                                        "name": "DataSourceManager",
                                        "description": "",
                                        "parameters": [
                                            {
                                                "name": "options",
                                                "type": "Object",
                                                "description": "",
                                                "default": "",
                                                "optional": "",
                                                "nullable": ""
                                            }
                                        ],
                                        "examples": [
                                            "var datamgr = new WinJSContrib.UI.DataSources.DataSourceManager({\r   defaultGroupLimit: 12,\r   groupKind: WinJSContrib.UI.DataSources.Grouping.byField,\r   field: 'metadata.genre',\r   listview: page.zoomedInList,\r   zoomedOutListView: page.zoomedOutList\r});"
                                        ]
                                    },
                                    "properties": [
                                        {
                                            "name": "defaultGroupLimit",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "type": ""
                                        },
                                        {
                                            "name": "groupKind",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "type": ""
                                        },
                                        {
                                            "name": "listview",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "type": ""
                                        },
                                        {
                                            "name": "groupedList",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "type": ""
                                        },
                                        {
                                            "name": "filter",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "type": ""
                                        },
                                        {
                                            "name": "items",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "type": ""
                                        }
                                    ],
                                    "functions": [
                                        {
                                            "name": "init",
                                            "access": "",
                                            "virtual": false,
                                            "description": "initialise data",
                                            "parameters": [],
                                            "examples": []
                                        },
                                        {
                                            "name": "prepareItems",
                                            "access": "",
                                            "virtual": false,
                                            "description": "clean-up, initialise data and bind listviews to data",
                                            "parameters": [],
                                            "examples": []
                                        },
                                        {
                                            "name": "attach",
                                            "access": "",
                                            "virtual": false,
                                            "description": "attach listviews to data",
                                            "parameters": [],
                                            "examples": []
                                        },
                                        {
                                            "name": "parentSemanticZoom",
                                            "access": "",
                                            "virtual": false,
                                            "description": "get parent semantic zoom control",
                                            "parameters": [],
                                            "examples": [],
                                            "returns": {
                                                "type": "WinJS.UI.SemanticZoom",
                                                "description": ""
                                            }
                                        },
                                        {
                                            "name": "detach",
                                            "access": "",
                                            "virtual": false,
                                            "description": "detach listviews from data",
                                            "parameters": [],
                                            "examples": []
                                        }
                                    ]
                                }
                            ],
                            "namespaces": [
                                {
                                    "name": "Grouping",
                                    "description": "Custom grouping settings for {@link WinJSContrib.UI.DataSources.DataSourceManager}",
                                    "access": "",
                                    "virtual": false,
                                    "properties": [
                                        {
                                            "name": "alphabetic",
                                            "access": "",
                                            "virtual": false,
                                            "description": "alphabetic grouping, use \"options.field\" to define the property used for grouping",
                                            "type": ""
                                        },
                                        {
                                            "name": "byField",
                                            "access": "",
                                            "virtual": false,
                                            "description": "grouping by a string field on items, use \"options.field\" to define the property used for grouping",
                                            "type": ""
                                        },
                                        {
                                            "name": "byYear",
                                            "access": "",
                                            "virtual": false,
                                            "description": "grouping by year from a date field, use \"options.field\" to define the property used for grouping",
                                            "type": ""
                                        },
                                        {
                                            "name": "byMonth",
                                            "access": "",
                                            "virtual": false,
                                            "description": "grouping by month from a date field, use \"options.field\" to define the property used for grouping",
                                            "type": ""
                                        },
                                        {
                                            "name": "byDay",
                                            "access": "",
                                            "virtual": false,
                                            "description": "grouping by day from a date field, use \"options.field\" to define the property used for grouping",
                                            "type": ""
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Utils",
                    "description": "",
                    "access": "",
                    "virtual": false,
                    "functions": [
                        {
                            "name": "startsWith",
                            "access": "",
                            "virtual": false,
                            "description": "indicate if string starts with featured characters",
                            "parameters": [
                                {
                                    "name": "str",
                                    "type": "string",
                                    "description": "string to search within",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "strToMatch",
                                    "type": "string",
                                    "description": "match string",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "boolean",
                                "description": "true if string starts with strToMatch"
                            }
                        },
                        {
                            "name": "endsWith",
                            "access": "",
                            "virtual": false,
                            "description": "indicate if string ends with featured characters",
                            "parameters": [
                                {
                                    "name": "str",
                                    "type": "string",
                                    "description": "string to search within",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "strToMatch",
                                    "type": "string",
                                    "description": "match string",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "boolean",
                                "description": "true if string starts with strToMatch"
                            }
                        },
                        {
                            "name": "queryStringFrom",
                            "access": "",
                            "virtual": false,
                            "description": "generate a string formatted as a query string from object properties",
                            "parameters": [
                                {
                                    "name": "obj",
                                    "type": "Object",
                                    "description": "object to format",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "string",
                                "description": ""
                            }
                        },
                        {
                            "name": "triggerEvent",
                            "access": "",
                            "virtual": false,
                            "description": "trigger an event on a DOM node",
                            "parameters": [
                                {
                                    "name": "element",
                                    "type": "HTMLElement",
                                    "description": "receiving the event",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "eventName",
                                    "type": "string",
                                    "description": "name of the event",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "bubbles",
                                    "type": "boolean",
                                    "description": "indicate if event should bubble",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "cancellable",
                                    "type": "boolean",
                                    "description": "indicate if event can be cancelled",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "triggerCustomEvent",
                            "access": "",
                            "virtual": false,
                            "description": "",
                            "parameters": [
                                {
                                    "name": "element",
                                    "type": "HTMLElement",
                                    "description": "receiving the event",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "eventName",
                                    "type": "string",
                                    "description": "name of the event",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "bubbles",
                                    "type": "boolean",
                                    "description": "indicate if event should bubble",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "cancellable",
                                    "type": "boolean",
                                    "description": "indicate if event can be cancelled",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "readProperty",
                            "access": "",
                            "virtual": false,
                            "description": "Read property value on an object based on expression",
                            "parameters": [
                                {
                                    "name": "source",
                                    "type": "Object",
                                    "description": "the object containing data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "properties",
                                    "type": "Object",
                                    "description": "property descriptor. could be a string in js notation ex: 'myProp.myChildProp, \ror an array of strings ['myProp', 'myChildProp']. String notation can contain indexers",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "Object",
                                "description": "property value"
                            }
                        },
                        {
                            "name": "getProperty",
                            "access": "",
                            "virtual": false,
                            "description": "return a propery descriptor for an object based on expression",
                            "parameters": [
                                {
                                    "name": "source",
                                    "type": "Object",
                                    "description": "the object containing data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "properties",
                                    "type": "string[]",
                                    "description": "property descriptor. could be a string in js notation ex: 'myProp.myChildProp, \ror an array of strings ['myProp', 'myChildProp']. String notation can contain indexers",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "Object",
                                "description": "property descriptor"
                            }
                        },
                        {
                            "name": "writeProperty",
                            "access": "",
                            "virtual": false,
                            "description": "Write property value on an object based on expression",
                            "parameters": [
                                {
                                    "name": "source",
                                    "type": "Object",
                                    "description": "the object containing data",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "properties",
                                    "type": "string[]",
                                    "description": "property descriptor. could be a string in js notation ex: 'myProp.myChildProp, \ror an array of strings ['myProp', 'myChildProp']. String notation can contain indexers",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "data",
                                    "type": "Object",
                                    "description": "data to feed to the property",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "randomFromInterval",
                            "access": "",
                            "virtual": false,
                            "description": "generate a random value between two numbers",
                            "parameters": [
                                {
                                    "name": "from",
                                    "type": "number",
                                    "description": "lower limit",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "to",
                                    "type": "number",
                                    "description": "upper limit",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "number",
                                "description": ""
                            }
                        },
                        {
                            "name": "alphabeticSort",
                            "access": "",
                            "virtual": false,
                            "description": "function to useas a callback for Array.sort when you want the array to be sorted alphabetically",
                            "parameters": [
                                {
                                    "name": "a",
                                    "type": "string",
                                    "description": "",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "b",
                                    "type": "string",
                                    "description": "",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "number",
                                "description": ""
                            }
                        },
                        {
                            "name": "distinctArray",
                            "access": "",
                            "virtual": false,
                            "description": "generate an array with only distinct elements",
                            "parameters": [
                                {
                                    "name": "array",
                                    "type": "Array",
                                    "description": "",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "path",
                                    "type": "string",
                                    "description": "to array's item property used for checking items",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "ignorecase",
                                    "type": "boolean",
                                    "description": "indicate if comparison should ignore case when using string",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "Array",
                                "description": ""
                            }
                        },
                        {
                            "name": "getDistinctPropertyValues",
                            "access": "",
                            "virtual": false,
                            "description": "get distinct values from an array of items",
                            "parameters": [
                                {
                                    "name": "array",
                                    "type": "Array",
                                    "description": "items array",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "property",
                                    "type": "string",
                                    "description": "property path for values",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "ignorecase",
                                    "type": "boolean",
                                    "description": "ignore case for comparisons",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "removeAccents",
                            "access": "",
                            "virtual": false,
                            "description": "Remove all accented characters from a string and replace them with their non-accented counterpart for ex: replace \"é\" with \"e\"",
                            "parameters": [
                                {
                                    "name": "s",
                                    "type": "string",
                                    "description": "",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "string",
                                "description": ""
                            }
                        },
                        {
                            "name": "removePageFromHistory",
                            "access": "",
                            "virtual": false,
                            "description": "remove a page from navigation history",
                            "parameters": [
                                {
                                    "name": "pageLocation",
                                    "type": "string",
                                    "description": "page url",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "pad2",
                            "access": "",
                            "virtual": false,
                            "description": "format a number on 2 characters",
                            "parameters": [
                                {
                                    "name": "number",
                                    "type": "number",
                                    "description": "",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "ellipsisizeString",
                            "access": "",
                            "virtual": false,
                            "description": "truncate a string and add ellipse if text if greater than certain size",
                            "parameters": [
                                {
                                    "name": "text",
                                    "type": "string",
                                    "description": "text to truncate",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "maxSize",
                                    "type": "number",
                                    "description": "maximum size for text",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "useWordBoundary",
                                    "type": "boolean",
                                    "description": "indicate if truncate should happen on the closest word boundary (like space)",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "guid",
                            "access": "",
                            "virtual": false,
                            "description": "generate a new Guid",
                            "parameters": [],
                            "examples": [],
                            "returns": {
                                "type": "string",
                                "description": ""
                            }
                        },
                        {
                            "name": "inherit",
                            "access": "",
                            "virtual": false,
                            "description": "inherit property from parent WinJS controls",
                            "parameters": [
                                {
                                    "name": "element",
                                    "type": "HTMLElement",
                                    "description": "",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "property",
                                    "type": "string",
                                    "description": "property name",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "moveChilds",
                            "access": "",
                            "virtual": false,
                            "description": "move DOM childrens form one node to the other",
                            "parameters": [
                                {
                                    "name": "source",
                                    "type": "HTMLElement",
                                    "description": "source node containing elements to move",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "target",
                                    "type": "HTMLElement",
                                    "description": "target node for moved elements",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "getParent",
                            "access": "",
                            "virtual": false,
                            "description": "get parent control identifyed by a property attached on DOM element",
                            "parameters": [
                                {
                                    "name": "property",
                                    "type": "string",
                                    "description": "property attached to control's DOM element, for ex: msParentSelectorScope",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "element",
                                    "type": "HTMLElement",
                                    "description": "DOM element to scan",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "Object",
                                "description": "WinJS control"
                            }
                        },
                        {
                            "name": "getParentControlByClass",
                            "access": "",
                            "virtual": false,
                            "description": "get parent control identifyed by a css class",
                            "parameters": [
                                {
                                    "name": "className",
                                    "type": "string",
                                    "description": "css class name",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "element",
                                    "type": "HTMLElement",
                                    "description": "DOM element to scan",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "Object",
                                "description": "WinJS control"
                            }
                        },
                        {
                            "name": "getParentPage",
                            "access": "",
                            "virtual": false,
                            "description": "get parent page control (work only with WinJSContrib.UI.PageControlNavigator",
                            "parameters": [
                                {
                                    "name": "element",
                                    "type": "HTMLElement",
                                    "description": "DOM element to scan",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "Object",
                                "description": "WinJS control"
                            }
                        },
                        {
                            "name": "getScopeControl",
                            "access": "",
                            "virtual": false,
                            "description": "get parent scope control (based on msParentSelectorScope)",
                            "parameters": [
                                {
                                    "name": "element",
                                    "type": "HTMLElement",
                                    "description": "DOM element to scan",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "Object",
                                "description": "WinJS control"
                            }
                        },
                        {
                            "name": "getTemplate",
                            "access": "",
                            "virtual": false,
                            "description": "get WinJS.Binding.Template like control from a path, a control, a function or a DOM element",
                            "parameters": [
                                {
                                    "name": "template",
                                    "type": "Object",
                                    "description": "template input",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "Object",
                                "description": "WinJS.Binding.Template or template-like object"
                            }
                        },
                        {
                            "name": "resolveMethod",
                            "access": "",
                            "virtual": false,
                            "description": "get a function from an expression, for example 'page:myAction' will return the myAction function from the parent page.\rThe returned function will be bound to it's owner. This function relies on {link WinJSContrib.Utils.resolveValue}, see this for details about how data are crawled",
                            "parameters": [
                                {
                                    "name": "element",
                                    "type": "HTMLElement",
                                    "description": "DOM element to look",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "text",
                                    "type": "string",
                                    "description": "expression like 'page:something' or 'ctrl:something' or 'something'",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "function",
                                "description": ""
                            }
                        },
                        {
                            "name": "resolveValue",
                            "access": "",
                            "virtual": false,
                            "description": "resolve value from an expression. This helper will crawl the DOM up, and provide the property or function from parent page or control.",
                            "parameters": [
                                {
                                    "name": "element",
                                    "type": "HTMLElement",
                                    "description": "DOM element to look",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "text",
                                    "type": "string",
                                    "description": "expression like 'page:something' or 'ctrl:something' or 'something'",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "Object",
                                "description": ""
                            }
                        },
                        {
                            "name": "hasValue",
                            "access": "",
                            "virtual": false,
                            "description": "Checks in a safe way if an object has a value, which could be 'false', '0' or '\"\"'",
                            "parameters": [
                                {
                                    "name": "item",
                                    "type": "Object",
                                    "description": "The object to check.",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "Boolean",
                                "description": "Whether the object has a value or not."
                            }
                        },
                        {
                            "name": "formatXHRError",
                            "access": "",
                            "virtual": false,
                            "description": "format error from an xhr call",
                            "parameters": [],
                            "examples": []
                        },
                        {
                            "name": "unwrapJoinError",
                            "access": "",
                            "virtual": false,
                            "description": "Unwraps the real error from a WinJS.Promise.join operation, which by design returns an array with 'undefined' for all cells,\rexcepts the one corresponding to the promise that really faulted.",
                            "parameters": [
                                {
                                    "name": "errorCallback",
                                    "type": "function",
                                    "description": "The callback to use to handle the error.",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "function",
                                "description": "The result of the callback being fired with the real error."
                            }
                        },
                        {
                            "name": "inject",
                            "access": "",
                            "virtual": false,
                            "description": "inject properties from source object to target object",
                            "parameters": [],
                            "examples": []
                        }
                    ]
                },
                {
                    "name": "Promise",
                    "description": "",
                    "access": "",
                    "virtual": false,
                    "functions": [
                        {
                            "name": "waterfall",
                            "access": "",
                            "virtual": false,
                            "description": "apply callback for each item in the array in waterfall",
                            "parameters": [
                                {
                                    "name": "dataArray",
                                    "type": "Array",
                                    "description": "items to process with async tasks",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "promiseCallback",
                                    "type": "function",
                                    "description": "function applyed to each item (could return a promise for item callback completion)",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "WinJS.Promise",
                                "description": ""
                            }
                        },
                        {
                            "name": "parallel",
                            "access": "",
                            "virtual": false,
                            "description": "apply callback for each item in the array in parallel (equivalent to WinJS.Promise.join)",
                            "parameters": [
                                {
                                    "name": "dataArray",
                                    "type": "Array",
                                    "description": "items to process with async tasks",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "promiseCallback",
                                    "type": "function",
                                    "description": "function applyed to each item (could return a promise for item callback completion)",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "WinJS.Promise",
                                "description": ""
                            }
                        },
                        {
                            "name": "batch",
                            "access": "",
                            "virtual": false,
                            "description": "apply callback for each item in the array in batch of X parallel items",
                            "parameters": [
                                {
                                    "name": "dataArray",
                                    "type": "Array",
                                    "description": "items to process with async tasks",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "promiseCallback",
                                    "type": "function",
                                    "description": "function applyed to each item (could return a promise for item callback completion)",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "WinJS.Promise",
                                "description": ""
                            }
                        }
                    ]
                },
                {
                    "name": "CrossPlatform",
                    "description": "Helpers for cross platform development",
                    "access": "",
                    "virtual": false,
                    "functions": [
                        {
                            "name": "crossPlatformClass",
                            "access": "",
                            "virtual": false,
                            "description": "add css class corresponding to cross platform devices",
                            "parameters": [],
                            "examples": []
                        }
                    ],
                    "namespaces": [
                        {
                            "name": "isMobile",
                            "description": "check user agent for identifying platform device",
                            "access": "",
                            "virtual": false,
                            "functions": [
                                {
                                    "name": "Android",
                                    "access": "",
                                    "virtual": false,
                                    "description": "Check if Android",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "BlackBerry",
                                    "access": "",
                                    "virtual": false,
                                    "description": "Check if Blackberry",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "iOS",
                                    "access": "",
                                    "virtual": false,
                                    "description": "Check if iOS",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "Opera",
                                    "access": "",
                                    "virtual": false,
                                    "description": "Check if Opera mini",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "Windows",
                                    "access": "",
                                    "virtual": false,
                                    "description": "Check if Windows",
                                    "parameters": [],
                                    "examples": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Search",
                    "description": "Small text search features based on objet indexing and text stemming. It's inspired by tools like Lucene.\rFor now indexes are stored with WinRT files, but it will soon be extended to support an extensible storage mecanism",
                    "access": "",
                    "virtual": false,
                    "typedefinitions": [
                        {
                            "name": "FieldDefinition",
                            "description": "definition for a field",
                            "extends": [],
                            "access": "",
                            "virtual": false,
                            "fires": "",
                            "constructor": {
                                "name": "FieldDefinition",
                                "description": "definition for a field",
                                "parameters": [],
                                "examples": [
                                    "{ weight : 2}"
                                ]
                            },
                            "properties": [
                                {
                                    "name": "weight",
                                    "access": "",
                                    "virtual": false,
                                    "description": "weight of the item to rank search results",
                                    "type": {
                                        "names": [
                                            "number"
                                        ]
                                    }
                                }
                            ]
                        },
                        {
                            "name": "IndexDefinition",
                            "description": "Definition of an index content",
                            "extends": [],
                            "access": "",
                            "virtual": false,
                            "fires": "",
                            "constructor": {
                                "name": "IndexDefinition",
                                "description": "Definition of an index content",
                                "parameters": [],
                                "examples": [
                                    "{ key: 'id', fields: { \"title\": { weight : 5}, \"description.detail\": { weight : 2}}}"
                                ]
                            },
                            "properties": [
                                {
                                    "name": "key",
                                    "access": "",
                                    "virtual": false,
                                    "description": "name of the property considered as a key for the items",
                                    "type": {
                                        "names": [
                                            "string"
                                        ]
                                    }
                                },
                                {
                                    "name": "fields",
                                    "access": "",
                                    "virtual": false,
                                    "description": "object containing item's property path as name, and {@link WinJSContrib.Search.FieldDefinition} as value",
                                    "type": {
                                        "names": [
                                            "Object"
                                        ]
                                    }
                                }
                            ]
                        }
                    ],
                    "classes": [
                        {
                            "name": "IndexGroup",
                            "description": "group of indexes",
                            "extends": [],
                            "access": "",
                            "virtual": false,
                            "fires": "",
                            "constructor": {
                                "name": "IndexGroup",
                                "description": "group of indexes",
                                "parameters": [
                                    {
                                        "name": "definitions",
                                        "type": "Object",
                                        "description": "object containing definitions",
                                        "default": "",
                                        "optional": "",
                                        "nullable": ""
                                    }
                                ],
                                "examples": [
                                    "var idxgroup = new WinJSContrib.Search.IndexGroup({ peoples: { \"firstname\": { weight: 42 }} });"
                                ]
                            },
                            "functions": [
                                {
                                    "name": "addIndex",
                                    "access": "",
                                    "virtual": false,
                                    "description": "add an index to group",
                                    "parameters": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "description": "index name",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "definition",
                                            "type": "WinJSContrib.Search.IndexDefinition",
                                            "description": "index definition",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": [],
                                    "returns": {
                                        "type": "WinJS.Promise",
                                        "description": ""
                                    }
                                },
                                {
                                    "name": "addRange",
                                    "access": "",
                                    "virtual": false,
                                    "description": "add items to an index",
                                    "parameters": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "description": "index name",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": [],
                                    "returns": {
                                        "type": "WinJS.Promise",
                                        "description": ""
                                    }
                                },
                                {
                                    "name": "search",
                                    "access": "",
                                    "virtual": false,
                                    "description": "search group's indexes",
                                    "parameters": [
                                        {
                                            "name": "querytext",
                                            "type": "string",
                                            "description": "search query",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "save",
                                    "access": "",
                                    "virtual": false,
                                    "description": "save group indexes",
                                    "parameters": [],
                                    "examples": [],
                                    "returns": {
                                        "type": "WinJS.Promise",
                                        "description": ""
                                    }
                                },
                                {
                                    "name": "load",
                                    "access": "",
                                    "virtual": false,
                                    "description": "load group indexes",
                                    "parameters": [],
                                    "examples": [],
                                    "returns": {
                                        "type": "WinJS.Promise",
                                        "description": ""
                                    }
                                },
                                {
                                    "name": "dispose",
                                    "access": "",
                                    "virtual": false,
                                    "description": "release all indexes",
                                    "parameters": [],
                                    "examples": []
                                }
                            ]
                        },
                        {
                            "name": "Index",
                            "description": "This class is the heart of the search engine. operations performed by this object are synchronous but exposes as promises.\rThis way Index is almost interchangeable with {@link WinJSContrib.Search.IndexWorkerProxy}",
                            "extends": [],
                            "access": "",
                            "virtual": false,
                            "fires": "",
                            "constructor": {
                                "name": "Index",
                                "description": "Search index",
                                "parameters": [
                                    {
                                        "name": "name",
                                        "type": "string",
                                        "description": "index name",
                                        "default": "",
                                        "optional": "",
                                        "nullable": ""
                                    },
                                    {
                                        "name": "definition",
                                        "type": "WinJSContrib.Search.IndexDefinition",
                                        "description": "index definition",
                                        "default": "",
                                        "optional": "",
                                        "nullable": ""
                                    }
                                ],
                                "examples": []
                            },
                            "functions": [
                                {
                                    "name": "count",
                                    "access": "",
                                    "virtual": false,
                                    "description": "get number of items in index",
                                    "parameters": [],
                                    "examples": [],
                                    "returns": {
                                        "type": "WinJS.Promise",
                                        "description": ""
                                    }
                                },
                                {
                                    "name": "clear",
                                    "access": "",
                                    "virtual": false,
                                    "description": "clear index",
                                    "parameters": [],
                                    "examples": [],
                                    "returns": {
                                        "type": "WinJS.Promise",
                                        "description": ""
                                    }
                                },
                                {
                                    "name": "dispose",
                                    "access": "",
                                    "virtual": false,
                                    "description": "release index",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "export",
                                    "access": "",
                                    "virtual": false,
                                    "description": "export index",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "toString",
                                    "access": "",
                                    "virtual": false,
                                    "description": "serialize index to string",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "loadData",
                                    "access": "",
                                    "virtual": false,
                                    "description": "load index from serialized string",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "save",
                                    "access": "",
                                    "virtual": false,
                                    "description": "save index to storage",
                                    "parameters": [],
                                    "examples": [],
                                    "returns": {
                                        "type": "WinJS.Promise",
                                        "description": ""
                                    }
                                },
                                {
                                    "name": "load",
                                    "access": "",
                                    "virtual": false,
                                    "description": "load index from storage",
                                    "parameters": [],
                                    "examples": [],
                                    "returns": {
                                        "type": "WinJS.Promise",
                                        "description": ""
                                    }
                                },
                                {
                                    "name": "search",
                                    "access": "",
                                    "virtual": false,
                                    "description": "search index",
                                    "parameters": [
                                        {
                                            "name": "querytext",
                                            "type": "string",
                                            "description": "",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": [],
                                    "returns": {
                                        "type": "WinJS.Promise",
                                        "description": "search result"
                                    }
                                },
                                {
                                    "name": "define",
                                    "access": "",
                                    "virtual": false,
                                    "description": "set index definition",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "add",
                                    "access": "",
                                    "virtual": false,
                                    "description": "add an object to index",
                                    "parameters": [
                                        {
                                            "name": "obj",
                                            "type": "Object",
                                            "description": "object to index",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "definition",
                                            "type": "WinJSContrib.Search.IndexDefinition",
                                            "description": "index definition (optional), use index's definition if not defined",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": [],
                                    "returns": {
                                        "type": "WinJS.Promise",
                                        "description": ""
                                    }
                                },
                                {
                                    "name": "addRange",
                                    "access": "",
                                    "virtual": false,
                                    "description": "add an array of objects to index",
                                    "parameters": [
                                        {
                                            "name": "items",
                                            "type": "Array",
                                            "description": "items array",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "definition",
                                            "type": "WinJSContrib.Search.IndexDefinition",
                                            "description": "index definition (optional), use index's definition if not defined",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": [],
                                    "returns": {
                                        "type": "WinJS.Promise",
                                        "description": ""
                                    }
                                },
                                {
                                    "name": "processText",
                                    "access": "",
                                    "virtual": false,
                                    "description": "prepare a text for search by applying stemming and tokenizing text",
                                    "parameters": [
                                        {
                                            "name": "text",
                                            "type": "string",
                                            "description": "",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "checkWord",
                                    "access": "",
                                    "virtual": false,
                                    "description": "Check if a word is a stopword",
                                    "parameters": [
                                        {
                                            "name": "word",
                                            "type": "string",
                                            "description": "",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "tokenize",
                                    "access": "",
                                    "virtual": false,
                                    "description": "split a string into words",
                                    "parameters": [
                                        {
                                            "name": "text",
                                            "type": "string",
                                            "description": "",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                }
                            ]
                        },
                        {
                            "name": "IndexWorkerProxy",
                            "description": "Proxy for a {@link WinJSContrib.Search.Index} running in a web worker",
                            "extends": [],
                            "access": "",
                            "virtual": false,
                            "fires": "",
                            "constructor": {
                                "name": "IndexWorkerProxy",
                                "description": "",
                                "parameters": [
                                    {
                                        "name": "name",
                                        "type": "string",
                                        "description": "index name",
                                        "default": "",
                                        "optional": "",
                                        "nullable": ""
                                    },
                                    {
                                        "name": "definition",
                                        "type": "WinJSContrib.Search.IndexDefinition",
                                        "description": "index definition",
                                        "default": "",
                                        "optional": "",
                                        "nullable": ""
                                    },
                                    {
                                        "name": "workerpath",
                                        "type": "string",
                                        "description": "path for web worker script file (optional)",
                                        "default": "",
                                        "optional": "",
                                        "nullable": ""
                                    }
                                ],
                                "examples": []
                            },
                            "functions": [
                                {
                                    "name": "init",
                                    "access": "",
                                    "virtual": false,
                                    "description": "initialize worker",
                                    "parameters": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "description": "",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "definition",
                                            "type": "WinJSContrib.Search.IndexDefinition",
                                            "description": "index definition (optional), use index's definition if not defined",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": [],
                                    "returns": {
                                        "type": "WinJS.Promise",
                                        "description": ""
                                    }
                                },
                                {
                                    "name": "search",
                                    "access": "",
                                    "virtual": false,
                                    "description": "start search",
                                    "parameters": [
                                        {
                                            "name": "searchTerm",
                                            "type": "string",
                                            "description": "search query",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options",
                                            "type": "Object",
                                            "description": "",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": [],
                                    "returns": {
                                        "type": "WinJS.Promise",
                                        "description": ""
                                    }
                                },
                                {
                                    "name": "count",
                                    "access": "",
                                    "virtual": false,
                                    "description": "get the number of items in index",
                                    "parameters": [],
                                    "examples": [],
                                    "returns": {
                                        "type": "WinJS.Promise",
                                        "description": ""
                                    }
                                },
                                {
                                    "name": "add",
                                    "access": "",
                                    "virtual": false,
                                    "description": "add an object to index",
                                    "parameters": [
                                        {
                                            "name": "obj",
                                            "type": "Object",
                                            "description": "object to index",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options",
                                            "type": "Object",
                                            "description": "",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": [],
                                    "returns": {
                                        "type": "WinJS.Promise",
                                        "description": ""
                                    }
                                },
                                {
                                    "name": "addRange",
                                    "access": "",
                                    "virtual": false,
                                    "description": "add an array of objects to index",
                                    "parameters": [
                                        {
                                            "name": "items",
                                            "type": "Array",
                                            "description": "items array",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options",
                                            "type": "Object",
                                            "description": "",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": [],
                                    "returns": {
                                        "type": "WinJS.Promise",
                                        "description": ""
                                    }
                                },
                                {
                                    "name": "dispose",
                                    "access": "",
                                    "virtual": false,
                                    "description": "release proxy",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "clear",
                                    "access": "",
                                    "virtual": false,
                                    "description": "clear index",
                                    "parameters": [],
                                    "examples": [],
                                    "returns": {
                                        "type": "WinJS.Promise",
                                        "description": ""
                                    }
                                },
                                {
                                    "name": "load",
                                    "access": "",
                                    "virtual": false,
                                    "description": "load index from storage",
                                    "parameters": [],
                                    "examples": [],
                                    "returns": {
                                        "type": "WinJS.Promise",
                                        "description": ""
                                    }
                                },
                                {
                                    "name": "save",
                                    "access": "",
                                    "virtual": false,
                                    "description": "save index to storage",
                                    "parameters": [],
                                    "examples": [],
                                    "returns": {
                                        "type": "WinJS.Promise",
                                        "description": ""
                                    }
                                }
                            ]
                        }
                    ],
                    "namespaces": [
                        {
                            "name": "Stemming",
                            "description": "",
                            "access": "",
                            "virtual": false,
                            "classes": [
                                {
                                    "name": "Pipeline",
                                    "description": "stemming pipeline",
                                    "extends": [],
                                    "access": "",
                                    "virtual": false,
                                    "fires": "",
                                    "constructor": {
                                        "name": "Pipeline",
                                        "description": "stemming pipeline",
                                        "parameters": [],
                                        "examples": []
                                    },
                                    "functions": [
                                        {
                                            "name": "add",
                                            "access": "",
                                            "virtual": false,
                                            "description": "add a stemming function to pipeline",
                                            "parameters": [
                                                {
                                                    "name": "callback",
                                                    "type": "function",
                                                    "description": "stemming function",
                                                    "default": "",
                                                    "optional": "",
                                                    "nullable": ""
                                                }
                                            ],
                                            "examples": []
                                        },
                                        {
                                            "name": "clear",
                                            "access": "",
                                            "virtual": false,
                                            "description": "remove all stemming functions from pipeline",
                                            "parameters": [],
                                            "examples": []
                                        },
                                        {
                                            "name": "run",
                                            "access": "",
                                            "virtual": false,
                                            "description": "apply stemming pipeline to text",
                                            "parameters": [
                                                {
                                                    "name": "text",
                                                    "type": "string",
                                                    "description": "",
                                                    "default": "",
                                                    "optional": "",
                                                    "nullable": ""
                                                }
                                            ],
                                            "examples": []
                                        },
                                        {
                                            "name": "registerDefault",
                                            "access": "",
                                            "virtual": false,
                                            "description": "register default stemmings in pipeline",
                                            "parameters": [],
                                            "examples": []
                                        }
                                    ]
                                }
                            ],
                            "namespaces": [
                                {
                                    "name": "StopWords",
                                    "description": "",
                                    "access": "",
                                    "virtual": false,
                                    "properties": [
                                        {
                                            "name": "common",
                                            "access": "",
                                            "virtual": false,
                                            "description": "list of common stopwords for french and english",
                                            "type": ""
                                        }
                                    ]
                                },
                                {
                                    "name": "Op",
                                    "description": "built-in stemmings",
                                    "access": "",
                                    "virtual": false,
                                    "functions": [
                                        {
                                            "name": "lowerCase",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "parameters": [],
                                            "examples": []
                                        },
                                        {
                                            "name": "dedup",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "parameters": [],
                                            "examples": []
                                        },
                                        {
                                            "name": "dropInitialLetters",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "parameters": [],
                                            "examples": []
                                        },
                                        {
                                            "name": "dropBafterMAtEnd",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "parameters": [],
                                            "examples": []
                                        },
                                        {
                                            "name": "cTransform",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "parameters": [],
                                            "examples": []
                                        },
                                        {
                                            "name": "dTransform",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "parameters": [],
                                            "examples": []
                                        },
                                        {
                                            "name": "dropG",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "parameters": [],
                                            "examples": []
                                        },
                                        {
                                            "name": "transformG",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "parameters": [],
                                            "examples": []
                                        },
                                        {
                                            "name": "dropH",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "parameters": [],
                                            "examples": []
                                        },
                                        {
                                            "name": "transformCK",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "parameters": [],
                                            "examples": []
                                        },
                                        {
                                            "name": "transformPH",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "parameters": [],
                                            "examples": []
                                        },
                                        {
                                            "name": "transformQ",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "parameters": [],
                                            "examples": []
                                        },
                                        {
                                            "name": "transformS",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "parameters": [],
                                            "examples": []
                                        },
                                        {
                                            "name": "transformT",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "parameters": [],
                                            "examples": []
                                        },
                                        {
                                            "name": "dropT",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "parameters": [],
                                            "examples": []
                                        },
                                        {
                                            "name": "transformV",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "parameters": [],
                                            "examples": []
                                        },
                                        {
                                            "name": "transformWH",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "parameters": [],
                                            "examples": []
                                        },
                                        {
                                            "name": "dropW",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "parameters": [],
                                            "examples": []
                                        },
                                        {
                                            "name": "transformX",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "parameters": [],
                                            "examples": []
                                        },
                                        {
                                            "name": "dropY",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "parameters": [],
                                            "examples": []
                                        },
                                        {
                                            "name": "transformZ",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "parameters": [],
                                            "examples": []
                                        },
                                        {
                                            "name": "dropVowels",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "parameters": [],
                                            "examples": []
                                        },
                                        {
                                            "name": "removeDiacritics",
                                            "access": "",
                                            "virtual": false,
                                            "description": "",
                                            "parameters": [],
                                            "examples": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "WinRT",
                    "description": "",
                    "access": "",
                    "virtual": false,
                    "functions": [
                        {
                            "name": "readProtocol",
                            "access": "",
                            "virtual": false,
                            "description": "WORK ONLY FOR WINRT\rread protocol arguments from application activation event arguments",
                            "parameters": [
                                {
                                    "name": "args",
                                    "type": "Object",
                                    "description": "WinJS application activation argument",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "Object",
                                "description": "protocol arguments"
                            }
                        },
                        {
                            "name": "isConnected",
                            "access": "",
                            "virtual": false,
                            "description": "WORK ONLY FOR WINRT\rIndicate if a valid internet connection is available, even with constrained access",
                            "parameters": [],
                            "examples": [],
                            "returns": {
                                "type": "boolean",
                                "description": ""
                            }
                        },
                        {
                            "name": "hasInternetAccess",
                            "access": "",
                            "virtual": false,
                            "description": "WORK ONLY FOR WINRT\rIndicate if a valid internet connection is available",
                            "parameters": [],
                            "examples": [],
                            "returns": {
                                "type": "boolean",
                                "description": ""
                            }
                        }
                    ]
                },
                {
                    "name": "Alerts",
                    "description": "",
                    "access": "",
                    "virtual": false
                }
            ],
            "classes": [
                {
                    "name": "Logger",
                    "description": "logger abstraction to enable logging levels and global configuration",
                    "extends": [],
                    "access": "",
                    "virtual": false,
                    "fires": "",
                    "constructor": {
                        "name": "Logger",
                        "description": "logger abstraction to enable logging levels and global configuration",
                        "parameters": [],
                        "examples": []
                    },
                    "classes": [
                        {
                            "name": "LoggerClass",
                            "description": "",
                            "extends": [],
                            "access": "",
                            "virtual": false,
                            "fires": "",
                            "constructor": {
                                "name": "LoggerClass",
                                "description": "",
                                "parameters": [],
                                "examples": []
                            },
                            "properties": [
                                {
                                    "name": "Config",
                                    "access": "",
                                    "virtual": false,
                                    "description": "logger configuration",
                                    "type": {
                                        "names": [
                                            "Object"
                                        ]
                                    }
                                }
                            ],
                            "functions": [
                                {
                                    "name": "log",
                                    "access": "",
                                    "virtual": false,
                                    "description": "Add log entry",
                                    "parameters": [
                                        {
                                            "name": "message",
                                            "type": "string",
                                            "description": "log message",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "group",
                                            "type": "string",
                                            "description": "group/category for the entry",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "log",
                                            "type": "number",
                                            "description": "level",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "debug",
                                    "access": "",
                                    "virtual": false,
                                    "description": "add debug log entry",
                                    "parameters": [
                                        {
                                            "name": "message",
                                            "type": "string",
                                            "description": "log message",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "group",
                                            "type": "string",
                                            "description": "log group name",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "info",
                                    "access": "",
                                    "virtual": false,
                                    "description": "add info log entry",
                                    "parameters": [
                                        {
                                            "name": "message",
                                            "type": "string",
                                            "description": "log message",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "group",
                                            "type": "string",
                                            "description": "log group name",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "warn",
                                    "access": "",
                                    "virtual": false,
                                    "description": "add warn log entry",
                                    "parameters": [
                                        {
                                            "name": "message",
                                            "type": "string",
                                            "description": "log message",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "group",
                                            "type": "string",
                                            "description": "log group name",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "error",
                                    "access": "",
                                    "virtual": false,
                                    "description": "add error log entry",
                                    "parameters": [
                                        {
                                            "name": "message",
                                            "type": "string",
                                            "description": "log message",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        },
                                        {
                                            "name": "group",
                                            "type": "string",
                                            "description": "log group name",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "group",
                                    "access": "",
                                    "virtual": false,
                                    "description": "create a group",
                                    "parameters": [
                                        {
                                            "name": "title",
                                            "type": "string",
                                            "description": "group title",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "groupCollapsed",
                                    "access": "",
                                    "virtual": false,
                                    "description": "create a collapsed group",
                                    "parameters": [
                                        {
                                            "name": "title",
                                            "type": "string",
                                            "description": "group title",
                                            "default": "",
                                            "optional": "",
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": []
                                },
                                {
                                    "name": "groupEnd",
                                    "access": "",
                                    "virtual": false,
                                    "description": "end current group",
                                    "parameters": [],
                                    "examples": []
                                },
                                {
                                    "name": "getLogger",
                                    "access": "",
                                    "virtual": false,
                                    "description": "Get a child logger",
                                    "parameters": [],
                                    "examples": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Messenger",
                    "description": "Wrapper for messaging between main code and iframe or web worker. All returns are wrapped as WinJS.Promise to enable asynchronous scenarios",
                    "extends": [],
                    "access": "",
                    "virtual": false,
                    "fires": "",
                    "constructor": {
                        "name": "Messenger",
                        "description": "",
                        "parameters": [
                            {
                                "name": "receiver",
                                "type": "DOMElement",
                                "description": "element that will receive messages",
                                "default": "",
                                "optional": "",
                                "nullable": ""
                            },
                            {
                                "name": "sender",
                                "type": "DOMElement",
                                "description": "element that will send messages",
                                "default": "",
                                "optional": "",
                                "nullable": ""
                            }
                        ],
                        "examples": []
                    },
                    "properties": [
                        {
                            "name": "SmartWorkerPath",
                            "access": "",
                            "virtual": false,
                            "description": "default path for smart worker js file",
                            "type": ""
                        }
                    ],
                    "classes": [
                        {
                            "name": "SmartWorker",
                            "description": "Wrapper for {@link WinJSContrib.Messenger} when using it with a webworker",
                            "extends": [],
                            "access": "",
                            "virtual": false,
                            "fires": "",
                            "constructor": {
                                "name": "SmartWorker",
                                "description": "",
                                "parameters": [
                                    {
                                        "name": "path",
                                        "type": "string",
                                        "description": "path to web worker file",
                                        "default": "",
                                        "optional": true,
                                        "nullable": ""
                                    }
                                ],
                                "examples": []
                            }
                        }
                    ],
                    "functions": [
                        {
                            "name": "importScripts",
                            "access": "",
                            "virtual": false,
                            "description": "import script files",
                            "parameters": [
                                {
                                    "name": "scriptPaths",
                                    "type": "Array",
                                    "description": "an array of string paths to js files",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": []
                        },
                        {
                            "name": "execute",
                            "access": "",
                            "virtual": false,
                            "description": "run the callback in the web worker. The callback is serialized to string so you must pass all variable used inside the function as arguments",
                            "parameters": [
                                {
                                    "name": "func",
                                    "type": "function",
                                    "description": "function callback",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "arg1",
                                    "type": "Object",
                                    "description": "",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "arg2",
                                    "type": "Object",
                                    "description": "",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "...",
                                    "type": "Object",
                                    "description": "",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "WinJS.Promise",
                                "description": ""
                            }
                        },
                        {
                            "name": "start",
                            "access": "",
                            "virtual": false,
                            "description": "start an operation within iframe or worker and get a promise for completion",
                            "parameters": [
                                {
                                    "name": "eventName",
                                    "type": "string",
                                    "description": "name of the event/function to call",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                },
                                {
                                    "name": "data",
                                    "type": "Object",
                                    "description": "event/function passed as argument",
                                    "default": "",
                                    "optional": "",
                                    "nullable": ""
                                }
                            ],
                            "examples": [],
                            "returns": {
                                "type": "WinJS.Promise",
                                "description": ""
                            }
                        },
                        {
                            "name": "dispose",
                            "access": "",
                            "virtual": false,
                            "description": "release messenger and associated resources (if using webworker, worker is terminated",
                            "parameters": [],
                            "examples": []
                        }
                    ]
                }
            ],
            "properties": [
                {
                    "name": "Search",
                    "access": "",
                    "virtual": false,
                    "description": "",
                    "type": ""
                }
            ]
        }
    ],
    "properties": [
        {
            "name": "object",
            "access": "",
            "virtual": false,
            "description": "",
            "type": {
                "names": [
                    "Object"
                ]
            }
        }
    ]
}
